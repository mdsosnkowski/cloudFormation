AWSTemplateFormatVersion: "2010-09-09"
# TITLE: webScraper_IAM
#
# WebScraper Applicaiton using EC2, S3, RDS, VPC, IAM, and CLOUDWATCH
# From https://youtu.be/51r3zPOun5g?si=MR2AjWEhBgGIDdSw
#
# Validate stack template:
# aws cloudformation validate-template --template-body file:///mnt/c/Users/Joasia/Documents/MikeStuff/CloudFormationProjects/cloudFormation/webScraper_EC2_S3_RDS_VPC_IAM.yaml
#
# Deploy stack
# NOTE: When using the AWS CLI to create or update a stack that includes IAM resources, you must specify the capability using the --capabilities flag
# aws cloudformation create-stack   --stack-name my-stack --template-body  file:///mnt/c/Users/Joasia/Documents/MikeStuff/CloudFormationProjects/cloudFormation/webScraper_EC2_S3_RDS_VPC_IAM.yaml --capabilities CAPABILITY_IAM
#
# Delete stack
# aws cloudformation delete-stack   --stack-name my-stack
# NOTE: do not put the parameters in the cli command as theses are in the config
# NOTE: try to use a non-hardcodded Instance type
#######################################################
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
      
Resources:
# Bucket for images
  MyS3Bucket:
     Type: AWS::S3::Bucket
# Web scraper server
  MyEC2Instance:
     Type: AWS::EC2::Instance
     Properties:
       InstanceType: !Ref InstanceType
       #ImageId: ami-0c104f6f4a5d9d1d5
       ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}"
       # Associate EC2 with the public subnet 10.0.0.0/24
       #SubnetId: !Ref mySubnetPublic
       IamInstanceProfile: !Ref EC2InstanceProfile

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref EC2AccessRole

# Role
  EC2AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyIAMRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies: # Polices listed under MyRole/Properties
        - PolicyName: S3ReadWritePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${MyS3Bucket}"
                  - !Sub "arn:aws:s3:::${MyS3Bucket}/*" 






